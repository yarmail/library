Переходим к работам над объектами Book

Такие же методы, как в Person больше обсуждаем
в Person, здесь короче.

Показать все книги
Также как и в Person:
в BookDAO - index();
в BooksController - index();
в представлениях - views/books/index.html

---

Вероятно самая загруженная страница проекта.
В представлениях это
views/books/show.html
Первоначально это - показать информацию
по выбранной книге, но дальше открываются
следующие возможности по операциям с этой книгой
- если у неё есть хозяин - возможность освободить
книгу
- если у неё нет хозяина - добавить из списка
всех Person

Соответственно используемые методы контроллера
BooksController - show(), release(), assign()

BookDAO - show(), getBookOwner(), release(), assign()
так же, для вывода списка для выбора нового владельца
используется PersonDAO - метод index()

---

Создание новой книги (внесение информации о новой книге)
Похоже как в Person.
Представления:
Начинается со ссылки со страницы
views/books/index.html
на страницу
/books/new (.html)
где мы попадаем на форму для заполнения новой книги

Эту страницу обрабатывают методы контроллера BooksController:
newBook() - обрабатывает переход на страницу new.html

Примечание:
метод newBook() контроллера BooksController -
создан с использованием аннотации @ModelAttribute
метод newPerson() контролера PeopleController -
не использует её (другой вариант создания)

create() - обрабатывает данные с формы на этой странице
по созданию новой книги

В BookDAO для работы с операцией по созданию
новой книги используется метод save().
Он сохраняет данные новой книги, полученной
с формы на странице new.html